name: Python package

on:
  push:
    # Build on tags that look like releases
    tags:
      - v*
    # Build when master is pushed to
    branches:
      - master
  pull_request:
    # Build when a pull request targets master
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.6, 3.7]
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        python -m pip install tox tox-gh-actions tox-venv
    - name: Test with tox
      run: tox -v
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml

  # CoolProp has to be built from the master branch for Python 3.8
  build-py38:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2
        with:
          path: main
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Clone CoolProp
        uses: actions/checkout@v2
        with:
          repository: CoolProp/CoolProp
          path: CoolProp
          submodules: 'recursive'
      - name: Install CoolProp dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          python -m pip install cython wheel
      - name: Build CoolProp wheel
        env:
          MACOSX_DEPLOYMENT_TARGET: 10.13
        run: |
          pushd CoolProp/wrappers/Python
          python ../../dev/generate_headers.py
          python setup.py bdist_wheel
          popd
      - name: Install test dependencies
        run: |
          python -m pip install tox tox-venv
      - name: Test with tox
        env:
          CP_PACKAGE_DIST_DIR: ${{ github.workspace }}/CoolProp/wrappers/Python/dist
        run: |
          pushd main
          tox -v -e py38
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: main/coverage.xml

  notebooks:
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repository
      uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install test dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        python -m pip install tox tox-venv
    - name: Run notebooks test
      run: tox -v -e notebooks

  flake8:
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repository
      uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install tox and dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox tox-venv
    - name: Run tox for flake8 environment
      run: tox -e flake8

  docs:
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repository
      uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install pandoc from Apt
      run: sudo apt-get install pandoc
    - name: Install docs dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install .[docs]
    - name: Build docs with sphinx
      run: |
        pushd docs && make html SPHINXOPTS="-W"

  conda-build-and-upload:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: goanpeca/setup-miniconda@v1
      with:
        auto-update-conda: true
        activate-environment: ''
        conda-build-version: '3.18'
        auto-activate-base: true
    - name: Append conda-forge channel to conda config
      run: |
        conda config --append channels conda-forge
      shell: bash -l {0}
    - name: Install conda-build dependencies
      run: |
        conda install -q anaconda-client conda-verify ripgrep
      shell: bash -l {0}
    - name: Run conda build
      run: |
        conda build conda.recipe
      shell: bash -l {0}
    - name: Upload package to anaconda.org
      run: |
        anaconda -t ${{ secrets.ANACONDA_TOKEN }} upload $CONDA/conda-bld/*/thermostate*.tar.bz2
      shell: bash -l {0}
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')

  pypi-build-and-upload:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install build dependencies
      run: python -m pip install --upgrade pip setuptools wheel pep517
    - name: Build the source and binary distributions
      run: python -m pep517.build --source --binary --out-dir dist/ .
    - name: Publish a Python distribution to PyPI
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@v1.0.0a0
      with:
        user: __token__
        password: ${{ secrets.PYPI_PASSWORD }}
