name: Python package

on:
  push:
    # Build on tags that look like releases
    tags:
      - v*
    # Build when main is pushed to
    branches:
      - main
  pull_request:
    # Build when a pull request targets main
    branches:
      - main

jobs:
  build:
    name: Build and test on ${{ matrix.os }} with Python ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Python 3.9 and 3.10 builds require CoolProp from their master branch
        # so we can use the coolprop-master builds below as the test
        # for Python 3.9 and 3.10
        python-version: ["3.7", "3.8"]
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install tox tox-gh-actions tox-venv
    - name: Test with tox
      run: tox -v
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml

  build-coolprop-master:
    name: Build CoolProp on ${{ matrix.os }} with Python ${{ matrix.python }}
    continue-on-error: true
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: ["3.9", "3.10"]
      fail-fast: false
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2
        with:
          path: main
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install Pip and Setuptools
        run: python -m pip install --upgrade pip setuptools wheel
      - uses: octokit/request-action@v2.x
        id: get-cp-hash
        with:
          route: GET /repos/:repository/commits/master
          repository: CoolProp/CoolProp
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: CoolProp cache
        id: cp-cache
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/CoolProp/wrappers/Python/dist
          key: ${{ runner.os }}-${{ matrix.python }}-cp-build-${{ fromJson(steps.get-cp-hash.outputs.data).sha }}
      - name: Clone CoolProp
        if: steps.cp-cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v2
        with:
          repository: CoolProp/CoolProp
          path: CoolProp
          submodules: recursive
      - name: Install CoolProp dependencies
        run: python -m pip install cython
        if: steps.cp-cache.outputs.cache-hit != 'true'
      - name: Build CoolProp wheel
        if: steps.cp-cache.outputs.cache-hit != 'true'
        env:
          MACOSX_DEPLOYMENT_TARGET: 11.0
        run: |
          pushd CoolProp/wrappers/Python
          python ../../dev/generate_headers.py
          python setup.py bdist_wheel
          popd
      - name: Install test dependencies
        run: |
          python -m pip install tox tox-venv
      - name: Test with tox
        env:
          CP_PACKAGE_DIST_DIR: ${{ github.workspace }}/CoolProp/wrappers/Python/dist
        run: |
          pushd main
          tox -e coolprop-master

  notebooks:
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repository
      uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install test dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        python -m pip install tox tox-venv
    - name: Run notebooks test
      run: tox -e notebooks

  flake8:
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repository
      uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install tox and dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox tox-venv
    - name: Run tox for flake8 environment
      run: tox -e flake8

  docs:
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repository
      uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install pandoc from Apt
      run: sudo apt-get install pandoc
    - name: Install docs dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install .[docs]
    - name: Build docs with sphinx
      run: |
        pushd docs && make html SPHINXOPTS="-W"

  pypi-build-and-upload:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install build dependencies
      run: python -m pip install --upgrade pip setuptools wheel build
    - name: Build the source and binary distributions
      run: python -m build --outdir dist/ .
    - name: Publish a Python distribution to PyPI
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@v1.3.1
      with:
        user: __token__
        password: ${{ secrets.PYPI_PASSWORD }}
